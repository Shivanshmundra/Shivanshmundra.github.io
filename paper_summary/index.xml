<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper Summary | Shivansh Mundra</title>
    <link>https://shivanshmundra.github.io/paper_summary/</link>
      <atom:link href="https://shivanshmundra.github.io/paper_summary/index.xml" rel="self" type="application/rss+xml" />
    <description>Paper Summary</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Shivansh Mundra</copyright><lastBuildDate>Mon, 22 Jun 2020 09:15:50 +0530</lastBuildDate>
    <image>
      <url>https://shivanshmundra.github.io/img/icon-192.png</url>
      <title>Paper Summary</title>
      <link>https://shivanshmundra.github.io/paper_summary/</link>
    </image>
    
    <item>
      <title>Understanding Deep Learning requires Re-Thinking Generalisation</title>
      <link>https://shivanshmundra.github.io/paper_summary/rethinking_generalisation/</link>
      <pubDate>Mon, 22 Jun 2020 09:15:50 +0530</pubDate>
      <guid>https://shivanshmundra.github.io/paper_summary/rethinking_generalisation/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://arxiv.org/abs/1611.03530&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paper Link&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generalisation-in-machine-learning-models&#34;&gt;Generalisation in Machine Learning Models&lt;/h3&gt;
&lt;p&gt;In Supervised Machine Learning, we train the model on training set and evaluate the model on a validation/testing set which is unseen during the training process. It is assumed that the data distribution is same for training and testing set.&lt;/p&gt;
&lt;p&gt;So, basically our goal for a &lt;strong&gt;good&lt;/strong&gt; Machine Learning model is to &lt;strong&gt;generalise&lt;/strong&gt; well from training data to any data from the problem domain.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;generalisation&lt;/strong&gt; refers to how well a machine learning model learns and generalises to a new data avoiding Over-fitting and Under-fitting.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;generalisation Error&lt;/strong&gt; refers to difference between Training error and Testing error. Increases with over fitting.&lt;/p&gt;
&lt;h2 id=&#34;key-findings-from-paper&#34;&gt;Key Findings from Paper&lt;/h2&gt;
&lt;p&gt;As of now, we understand that if a model is big(large parameter space), it tries to over-fit training data and we need explicit regularisation(l2 norm on parameters, data augmentations, weight decay, Early Stopping) to decrease Generalisation error.
&lt;strong&gt;But&lt;/strong&gt; this paper has shown that SOTA image classification models easily fit on random labelling of training data or even when true pixels are replaced by random pixels. This process is unaffected by explicit regularisation.&lt;/p&gt;
&lt;p&gt;By their experiments, they show that if size of Deep Neural Networks is greater than sample size(which usually happens), Neural Networks are able to capture meaningful signal in the data, &lt;strong&gt;while at the same time fit the noisy part using brute-force.&lt;/strong&gt; This is also unaffected by hyper-parameter tuning, same set of hyper-parameters converges for noisy labelled data too.&lt;/p&gt;
&lt;h3 id=&#34;effective-capacity-of-neural-network&#34;&gt;Effective Capacity of Neural Network&lt;/h3&gt;
&lt;p&gt;They have shown with their experiments that generalisation error not only depend on explicit regularisation and optimizer but on model architectures as well.&lt;/p&gt;
&lt;p&gt;Also, random noisy image pixels are easy to over-fit compared to true images as random images are well separated in pixel space than original one.&lt;/p&gt;
&lt;h3 id=&#34;traditional-bound-for-generalization&#34;&gt;Traditional bound for Generalization&lt;/h3&gt;
&lt;p&gt;Theoretically, we have VC dimension and Rademacher complexity to measure capacity of Classification model. But authors from their results showed that regularisation bound achieved theoretically is of no use in realistic settings.&lt;/p&gt;
&lt;p&gt;Similar is the case with evaluation of robustness of training algorithms. Namely Uniform Stability, which doesn&amp;rsquo;t take data into account just algorithm and it&amp;rsquo;s difficult to utilise this stability notion.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;graph.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;finally-role-of-regularisation&#34;&gt;Finally Role of Regularisation&lt;/h2&gt;
&lt;p&gt;With experimenting on different architectures on namely 3 explicit regularisation - data augmentation, weight decay and Dropout authors concluded that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Regularisation is important, but we can achieve more by just changing the architecture of model.&lt;/li&gt;
&lt;li&gt;Regularises are not only responsible for generalisation capacity of deep nets.&lt;/li&gt;
&lt;li&gt;Early Stopping could potentially improve generalisation performance.&lt;/li&gt;
&lt;li&gt;Batch Norm give marginal gains on generalisation error.&lt;/li&gt;
&lt;li&gt;Model could perform well even after regularises are removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;expressive-power-of-nns&#34;&gt;Expressive Power of NNs&lt;/h3&gt;
&lt;p&gt;Authors chose a different approach than traditional approach of showing what functions of entire domain can or can&amp;rsquo;t be represented. They show expressive power on a finite sample of size $n$.&lt;/p&gt;
&lt;p&gt;In their words, &amp;ldquo;There exists a two-layer neural network with ReLU activation and $2n+d$ weights that can represent any function on a sample of size $n$ in $d$ dimensions&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;implicit-regularisation&#34;&gt;Implicit Regularisation&lt;/h3&gt;
&lt;p&gt;They have theoretically shown that in linear models, SGD often converge to solution with minimum norm. And minimum norm doesn&amp;rsquo;t predict anything about generalisation performance.&lt;/p&gt;
&lt;p&gt;Doing simple tricks like preprocessing with some conv layers, gaussian kernels on pixels improve generalisation error which pose serious questions on traditional generalisation understanding.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;This shows that the reasons for why optimization is empirically easy must be different from the true cause of generalisation&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recurrent Multimodal Interaction for Referring Image Segmentation</title>
      <link>https://shivanshmundra.github.io/paper_summary/recurrent_multimodal/</link>
      <pubDate>Wed, 29 Apr 2020 00:17:44 +0530</pubDate>
      <guid>https://shivanshmundra.github.io/paper_summary/recurrent_multimodal/</guid>
      <description>&lt;h2 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h2&gt;
&lt;p&gt;The problem statement is to segment out visual object from natural language query. Semantics of that visual object are defined from NLP query. For ex. &lt;code&gt;Man in pink shirt&lt;/code&gt; in some image, we want to segment out corresponding region where any/all man is wearing pink shirt.&lt;/p&gt;
&lt;h2 id=&#34;related-works-and-inspiration&#34;&gt;Related Works and Inspiration&lt;/h2&gt;
&lt;p&gt;Right now this problem is addressed in academia by extracting out image features separately from Deep Convolution Neural Network and language features from LSTM cells. These features are then concatenated together to form a fused representation of image and query. This fused representation is somehow used to predict corresponding segmented region with trivial loss function.&lt;/p&gt;
&lt;p&gt;What authors feel is we, human don&amp;rsquo;t perceive things is similar manner like LSTM, we don&amp;rsquo;t remember everything after the last loop over word embeddings. In author words:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, consider the expression “the man on the right wearing blue”. Without seeing an actual image, all information in the sentence needs to be remembered, meaning the sentence embedding needs to encode IS MAN, ON RIGHT, WEAR BLUE jointly. However, with the actual image available, the reasoning process can be decomposed as a sequential process, where the model first identifies all pixels that agree with IS MAN, then prunes out those that do not correspond with ON RIGHT, and finally suppresses those that do not agree with WEAR BLUE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This task is also similar to visual question answering task where you need to generate answer(NLP) based on an image and a question. The difference only is, in VQA, we need sequence generation(in answer) while here we need to produce segmentation mask at once.&lt;/p&gt;
&lt;p&gt;Authors achieve this by applying LSTM in a convolution manner.&lt;/p&gt;
&lt;h2 id=&#34;key-contributions&#34;&gt;Key Contributions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;We propose a novel model, namely convolutional multimodal LSTM, to encode the sequential interactions between individual semantic, visual, and spatial information.&lt;/li&gt;
&lt;li&gt;We demonstrate the superior performance of the word to-image multimodal LSTM approach on benchmark datasets over the baseline model.&lt;/li&gt;
&lt;li&gt;We analyze the intermediate output of the proposed multimodal LSTM approach and empirically explain how this approach enforces a more effective word-toimage interaction.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Basically they want to convert this referring image segmentation into an sequential process.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;model&#34;&gt;Model&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;rmi_model.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rmi_np.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here concatenation of visual features and spatial features with language features is fed to &lt;code&gt;mLSTM&lt;/code&gt; cell as an input and &lt;code&gt;mLSTM&lt;/code&gt; cell produces an output for same. SInce mLSTM receives multimodal data, we can understand this as a 1x1 convolution applied to fused features .&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The same mLSTM operation is shared for all image locations. This is equivalent to treating the mLSTM as a 1×1 convolution over the feature map of size W 0 × H0 × (DI + DS + 8). In other words, this is a convolutional LSTM that shares weights both across spatial location and time step.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;result_rmi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;my-takeaways&#34;&gt;My Takeaways&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This idea of treating this problem as sequential problem is innovative and having an mLSTM cell to encode both visual and linguistic features is also good. This gives model ability to forget all those pixel which defy correspondence initially.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My guts are that this kind of model would work good even where there are small objects because at each time step there would be a reduction/change of probable pixels for segmentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I still believe that this essentially is fusing of features from image and language just more diffused!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I want to study good papers on VQA as they can provide me with good literature and insights on this task.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My Journey to Natural Language Processing</title>
      <link>https://shivanshmundra.github.io/paper_summary/intro_nlp/</link>
      <pubDate>Sat, 25 Apr 2020 11:59:39 +0530</pubDate>
      <guid>https://shivanshmundra.github.io/paper_summary/intro_nlp/</guid>
      <description>&lt;h2 id=&#34;natural-language-processing&#34;&gt;Natural Language Processing&lt;/h2&gt;
&lt;p&gt;I consider the reader to be familiar with normal machine learning terminology and methods. We here are going to deal with Supervised learning mostly.&lt;/p&gt;
&lt;p&gt;Since all machine learning models are mathematical function approximators, we can;t input a sentence to a mathematical model!&lt;/p&gt;
&lt;p&gt;There is nothing like &lt;code&gt;f(&#39;I am here to learn NLP&#39;)&lt;/code&gt;, one need to convert from our language to machine language so that it becomes something like &lt;code&gt;f([1, 0, 1, 2, 5 ..])&lt;/code&gt;, since this is the method computer is most familiar with. So first jumping to this conversion:&lt;/p&gt;
&lt;h3 id=&#34;conversion-of-text-to-mathematical-representation&#34;&gt;Conversion of text to mathematical representation&lt;/h3&gt;
&lt;h4 id=&#34;1-basic-approach-of-making-dictionary&#34;&gt;1. Basic Approach of making dictionary&lt;/h4&gt;
&lt;p&gt;Here you just create a dictionary or set of all available words present in data and represent each word/sentence with one hot vector. For example : Let&amp;rsquo;s say we have 8 words in our dictionary and sentence &lt;code&gt;I like banana&lt;/code&gt; is to be encoded, it would be something like &lt;code&gt;[1,0,0,0,1,0,0,1]&lt;/code&gt; where index representing &lt;code&gt;I, like and Banana&lt;/code&gt;. In this case, length of this vector would be fixed and equal to vocabulary of data.&lt;/p&gt;
&lt;p&gt;In this case, there is no sense of context here, &lt;code&gt;like&lt;/code&gt; can be used in different context yet same representation.  But duh! It&amp;rsquo;s the first method and supposed to be this dumb!&lt;/p&gt;
&lt;h4 id=&#34;2-tf-idf-representation&#34;&gt;2. TF-IDF Representation&lt;/h4&gt;
&lt;p&gt;Full form is : &lt;strong&gt;Term Frequency-Inverse Document Frequency&lt;/strong&gt; . The full form mentioned is self explanatory still we would want to get a feel. So here it is:&lt;/p&gt;
&lt;p&gt;Term-Frequency representation means number of times a word is occurring and represent in one hot vector by it&amp;rsquo;s frequency for ex &lt;code&gt;[1,2,0,0,3]&lt;/code&gt;. Now in this case, let&amp;rsquo;s say there is a common word &lt;code&gt;the&lt;/code&gt; which is occurring in most of corpus(another name for sentence!) but adds no specific meaning to understanding. So we take TF representation and multiply it with IDF which is $log(N/nw)$ where N is total number of document/corpus  and nw is number of corpus which contain that word. Smart thinking!&lt;/p&gt;
&lt;p&gt;We won&amp;rsquo;t use this in our supervised learning paradigm, we would just go with one hot vector and prepare embedding for our model.&lt;/p&gt;
&lt;h3 id=&#34;terminologies&#34;&gt;Terminologies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Corpus(singular- Corpura) : A sentence or document in general consisting of words.&lt;/li&gt;
&lt;li&gt;Tokenization: Splitting a corpus based on white spaces(in general) in between(for English specifically).
&lt;ul&gt;
&lt;li&gt;Say a sentence &lt;code&gt;I want to learn Tokenization :-)&lt;/code&gt; is to be tokenized.&lt;/li&gt;
&lt;li&gt;Tokenization would be &lt;code&gt;[&#39;I&#39;, &#39;want&#39;, &#39;to&#39;, &#39;learn&#39;, &#39;Tokenization&#39;, &#39;:-)&#39;]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;There are several libraries which use context and tokenize the corpus.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;N-gram tokens: Taking consecutive &lt;code&gt;n&lt;/code&gt; tokens from tokenized representation in contiguous manner.&lt;/li&gt;
&lt;li&gt;POS Tagging: Categorising tokens to parts of speech.&lt;/li&gt;
&lt;li&gt;Dependency Parsing: Extracting relationship/dependency between different tokens in sentence.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;workflow-of-nlp-pipeline&#34;&gt;Workflow of NLP Pipeline&lt;/h3&gt;
&lt;p&gt;In every NLP data, there are three main components:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Vocabulary:&lt;/strong&gt; We want a bijection mapping where we map tokens to mathematical integers. We create a dictionary mapping tokens to indexes. This would also contain index to token mapping.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Vectorizer&lt;/strong&gt;: This method produces vectors from text/corpus using vocabulary above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Dataloader&lt;/strong&gt;: Traditional data science batchloader which yield data points in rolling fashion.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xception: Deep Learning with Depthwise Separable Convolutions</title>
      <link>https://shivanshmundra.github.io/paper_summary/xceptionnet/</link>
      <pubDate>Wed, 22 Apr 2020 21:19:38 +0530</pubDate>
      <guid>https://shivanshmundra.github.io/paper_summary/xceptionnet/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://arxiv.org/abs/1610.02357&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paper Link&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;previous-works-and-inspiration&#34;&gt;Previous Works and Inspiration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;While Inception modules are conceptually similar to convolutions, the empirically appear to be capable of learning richer representations with less parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A convolution layer attempts to learn filters in a 3D space, with 2 spatial dimensions (width and height) and a channel dimension; thus a single convolution kernel is tasked with simultaneously mapping cross-channel correlations and spatial correlations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Inception module, we introduce 1x1 convolutions instead of 3 or 5 to extract fewer channels and focus on spatial information. After that mapping all correlations in these smaller 3D spaces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In theory, cross channel correlations and spatial correlations are decoupled in Inception module.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;inception_archi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;separable-convolution-layer&#34;&gt;Separable Convolution Layer&lt;/h3&gt;
&lt;p&gt;So essentially the idea of inception of separating cross channel mapping and spatial mapping was already there as a layer in Tensorflow as &amp;ldquo;Separable Conv&amp;rdquo; Layer.&lt;/p&gt;
&lt;p&gt;Main difference between this and Inception version is :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The order of the operations: depthwise separable convolutions as usually  implemented (e.g. in TensorFlow) perform first channel-wise spatial convolution and then perform 1x1 convolution, whereas Inception performs the 1x1 convolution first.(doesn&amp;rsquo;t have a difference as both are stacked)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The presence or absence of a non-linearity after the first operation. In Inception, both operations are followed by a ReLU non-linearity, however depthwise separable convolutions are usually implemented without non-linearities.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;key-contributions&#34;&gt;Key Contributions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Author say that we can totally decouple cross channel correlations and spatial correlations in the feature maps of convolution neural network.&lt;/li&gt;
&lt;li&gt;Parameters are almost same in Inception and Xception model while Xception outperforms by a large margin on a dataset with large number of classes(17k).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;xception_archi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rest all things are same, just replacing inception module by depthwise separable conv layer block also making the architecture simple.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;takeaway&#34;&gt;Takeaway&lt;/h2&gt;
&lt;p&gt;Idea of decoupling of channel dimension and spatial feature mapping from convolution kernel is great! So deciphering it mathematically:&lt;/p&gt;
&lt;p&gt;We know each channel in Convolution block represents some high level feature say in human, each channel would map a body part(just for example!). Then this idea of  depthwise conv proposes that in process of identifying one body part don&amp;rsquo;t process info from other body part info, it would disturb the signal in processing.&lt;/p&gt;
&lt;p&gt;After we get good signal info body part, then we can use info from others to get high level part info.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
